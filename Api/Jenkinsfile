/// <summary>
/// Jenkinsfile principal para despliegue automatizado del proyecto ANPR Vision.
/// Adaptado para ejecutarse en Jenkins sobre Windows.
/// </summary>

pipeline {
    agent any

    environment {
        DOTNET_CLI_HOME = 'C:\\jenkins\\dotnet'
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE = '1'
        DOTNET_NOLOGO = '1'
    }

    stages {

        stage('Leer entorno desde .env raíz') {
            steps {
                script {
                    // Leer el valor de ENVIRONMENT desde el archivo .env usando PowerShell
                    def envValue = bat(script: 'powershell -Command "(Get-Content .env | Where-Object { $_ -match \'^ENVIRONMENT=\' }) -replace \'^ENVIRONMENT=\', \'\'"', returnStdout: true).trim()

                    if (envValue == '') {
                        error "No se encontró ENVIRONMENT en el archivo .env raíz"
                    }

                    env.ENVIRONMENT = envValue
                    env.ENV_DIR = "DevOps\\${env.ENVIRONMENT}"
                    env.COMPOSE_FILE = "${env.ENV_DIR}\\docker-compose.yml"
                    env.ENV_FILE = "${env.ENV_DIR}\\.env"

                    echo "Entorno detectado: ${env.ENVIRONMENT}"
                    echo "Archivo compose: ${env.COMPOSE_FILE}"
                    echo "Archivo de entorno: ${env.ENV_FILE}"
                }
            }
        }

        stage('Restaurar dependencias') {
            steps {
                bat '''
                    echo Restaurando dependencias .NET...
                    if not exist "%DOTNET_CLI_HOME%" mkdir "%DOTNET_CLI_HOME%"
                    dotnet restore Web\\Web.csproj
                '''
            }
        }

        stage('Compilar proyecto') {
            steps {
                echo 'Compilando la solución ANPR Vision...'
                bat 'dotnet build Web\\Web.csproj --configuration Release'
            }
        }

        stage('Publicar y construir imagen Docker') {
            steps {
                echo "Construyendo imagen Docker para ANPR Vision (${env.ENVIRONMENT})"
                bat """
                    docker build -t anpr-vision-${env.ENVIRONMENT}:latest -f Dockerfile .
                """
            }
        }

        stage('Desplegar API') {
            steps {
                echo "Desplegando ANPR Vision para entorno: ${env.ENVIRONMENT}"
                bat """
                    docker compose -f ${env.COMPOSE_FILE} --env-file ${env.ENV_FILE} up -d --build
                """
            }
        }
    }

    post {
        success {
            echo "✅ Despliegue completado correctamente para ${env.ENVIRONMENT}"
        }
        failure {
            echo "❌ Error durante el despliegue en ${env.ENVIRONMENT}"
        }
    }
}
